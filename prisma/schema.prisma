generator client {
  provider = "prisma-client-js"
  previewFeatures = ["clientExtensions", "postgresqlExtensions"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  extensions      = [pgcrypto]
}

model agency {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  description             String?                   @db.VarChar(255)
  address                 String?                   @db.VarChar(255)
  city                    String?                   @db.VarChar(255)
  state                   String?                   @db.VarChar(255)
  zip_code                String?                   @db.VarChar(255)
  name                    String                    @db.VarChar(255)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  user_id                 String                    @db.Uuid
  tenant_id               String                    @db.VarChar(255)
  user                    user                      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  email_marketing_service email_marketing_service[]
  saas_service            saas_service[]
  seo_service             seo_service[]
  smo_service             smo_service[]
}

model email_marketing_service {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  price       Int?
  duration    DateTime? @db.Timestamp(6)
  agency_id   String    @db.Uuid
  user_id     String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  agency      agency    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model saas_service {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  price       Int?
  duration    DateTime? @db.Timestamp(6)
  agency_id   String    @db.Uuid
  user_id     String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  agency      agency    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model seo_service {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  price       Int?
  duration    DateTime? @db.Timestamp(6)
  agency_id   String    @db.Uuid
  user_id     String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  agency      agency    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model smo_service {
  id          String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  name        String    @db.VarChar(255)
  description String?   @db.VarChar(255)
  price       Int?
  duration    DateTime? @db.Timestamp(6)
  agency_id   String    @db.Uuid
  user_id     String    @db.Uuid
  created_at  DateTime  @default(now()) @db.Timestamp(6)
  updated_at  DateTime  @default(now()) @db.Timestamp(6)
  agency      agency    @relation(fields: [agency_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  user        user      @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model user {
  id                      String                    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  email                   String                    @unique @db.VarChar(255)
  firstName               String?                   @db.VarChar(255)
  lastName                String?                   @db.VarChar(255)
  roq_user_id             String                    @db.VarChar(255)
  tenant_id               String                    @db.VarChar(255)
  created_at              DateTime                  @default(now()) @db.Timestamp(6)
  updated_at              DateTime                  @default(now()) @db.Timestamp(6)
  agency                  agency[]
  email_marketing_service email_marketing_service[]
  saas_service            saas_service[]
  seo_service             seo_service[]
  smo_service             smo_service[]
}
